# File: notes   (from Aaron)

I think you're better
off forking the current version of Pathagar and only bumping Django. You
can try bumping it one minor version at a time and jot down some notes
about what's working and whats not. Django gives good warnings when
behavior changes between versions, so jumping straight to 1.10 you might
be missing some important clues.

Also, keeping the other dependencies the same helps reduce the number of
variables we're debugging. Likely these other dependencies will have to
get bumped as we upgrade Django, but it will be easier to handle them as
we go instead of all at once.

You can bump the minor version of Django with a command like so

    $ pip install Django==1.5

Don't spend too much time trying to fix the issues that you see, just jot
down any warnings or errors when trying to start the server

    $ python manage.py runserver
    # open your browser to http://localhost:8000
    # jot down any errors/warnings


For example, for Django 1.5 I see this:

    /urls/defaults.py:3: DeprecationWarning: django.conf.urls.defaults is
    deprecated; use django.conf.urls instead
    DeprecationWarning)


There's also some deprecation warnings from 1.4 alone that need to be fixed
(probably left over when someone upgraded from 1.3). It's harder to
track these down if you skip over versions and ignore the warnings.

The changelog notes will also be helpful, but they're of no use if you
jump from 1.4 to 1.10. Here's the changelog for 1.6[1].

Good luck, I hope we can pick this up together next time we meet.

[1] https://docs.djangoproject.com/en/dev/releases/1.6/

=================================================================

:) Alex, your point is valid about using /var/www. This is a good
reason why pathagar should not have opinions (code or instructions)
about deployment. Following the instructions for installing any django
app should work for pathagar (it's a bug if they don't). 

My opinion is that we should move any instructions on how to deploy to
different distros/environments to pathagar.info and maybe create other
repos to house the deployment code for ansible, rpms, or deb packages.
